syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)\)\s\=\s(.*)\s\<(\d+.\d+)\>");



>>> syscall = '1522783548.822808 execve("/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]) = 0 <0.003235>';
>>> import re
>>> syscall
'1522783548.822808 execve("/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]) = 0 <0.003235>'
>>> re.
re.A                  re.T                  re.__dir__(           re.__lt__(            re.__subclasshook__(  re._subx(             re.sre_compile
re.ASCII              re.TEMPLATE           re.__doc__            re.__name__           re.__version__        re.compile(           re.sre_parse
re.DEBUG              re.U                  re.__eq__(            re.__ne__(            re._alphanum_bytes    re.copyreg            re.sub(
re.DOTALL             re.UNICODE            re.__file__           re.__new__(           re._alphanum_str      re.error(             re.subn(
re.I                  re.VERBOSE            re.__format__(        re.__package__        re._cache             re.escape(            re.sys
re.IGNORECASE         re.X                  re.__ge__(            re.__reduce__(        re._cache_repl        re.findall(           re.template(
re.L                  re._MAXCACHE          re.__getattribute__(  re.__reduce_ex__(     re._compile(          re.finditer(          
re.LOCALE             re.__all__            re.__gt__(            re.__repr__(          re._compile_repl(     re.fullmatch(         
re.M                  re.__cached__         re.__hash__(          re.__setattr__(       re._expand(           re.match(             
re.MULTILINE          re.__class__(         re.__init__(          re.__sizeof__(        re._locale            re.purge(             
re.S                  re.__delattr__(       re.__le__(            re.__spec__           re._pattern_type(     re.search(            
re.Scanner(           re.__dict__           re.__loader__         re.__str__(           re._pickle(           re.split(             
>>> re.
re.A                  re.T                  re.__dir__(           re.__lt__(            re.__subclasshook__(  re._subx(             re.sre_compile
re.ASCII              re.TEMPLATE           re.__doc__            re.__name__           re.__version__        re.compile(           re.sre_parse
re.DEBUG              re.U                  re.__eq__(            re.__ne__(            re._alphanum_bytes    re.copyreg            re.sub(
re.DOTALL             re.UNICODE            re.__file__           re.__new__(           re._alphanum_str      re.error(             re.subn(
re.I                  re.VERBOSE            re.__format__(        re.__package__        re._cache             re.escape(            re.sys
re.IGNORECASE         re.X                  re.__ge__(            re.__reduce__(        re._cache_repl        re.findall(           re.template(
re.L                  re._MAXCACHE          re.__getattribute__(  re.__reduce_ex__(     re._compile(          re.finditer(          
re.LOCALE             re.__all__            re.__gt__(            re.__repr__(          re._compile_repl(     re.fullmatch(         
re.M                  re.__cached__         re.__hash__(          re.__setattr__(       re._expand(           re.match(             
re.MULTILINE          re.__class__(         re.__init__(          re.__sizeof__(        re._locale            re.purge(             
re.S                  re.__delattr__(       re.__le__(            re.__spec__           re._pattern_type(     re.search(            
re.Scanner(           re.__dict__           re.__loader__         re.__str__(           re._pickle(           re.split(             
>>> re.compile("(\d+.\d+)",syscall);
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.5/re.py", line 224, in compile
    return _compile(pattern, flags)
  File "/usr/lib/python3.5/re.py", line 293, in _compile
    p = sre_compile.compile(pattern, flags)
  File "/usr/lib/python3.5/sre_compile.py", line 536, in compile
    p = sre_parse.parse(p, flags)
  File "/usr/lib/python3.5/sre_parse.py", line 829, in parse
    p = _parse_sub(source, pattern, 0)
  File "/usr/lib/python3.5/sre_parse.py", line 437, in _parse_sub
    itemsappend(_parse(source, state))
  File "/usr/lib/python3.5/sre_parse.py", line 501, in _parse
    verbose = state.flags & SRE_FLAG_VERBOSE
TypeError: unsupported operand type(s) for &: 'str' and 'int'
>>> re.search("(\d+.\d+)",syscall);
<_sre.SRE_Match object; span=(0, 17), match='1522783548.822808'>
>>> re.search("(\d+.\d+)\s(\w+)",syscall);
<_sre.SRE_Match object; span=(0, 24), match='1522783548.822808 execve'>
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)");
>>> syspatern.search(syscall).groups
<built-in method groups of _sre.SRE_Match object at 0x7f80e7c229c0>
>>> syspatern.search(syscall).groups()
('1522783548.822808', 'execve')
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)");
>>> syspatern.search(syscall).groups()
('1522783548.822808', 'execve', '"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]) = 0 <0.003235>')
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)\)\s\=\s");
>>> syspatern.search(syscall).groups()
('1522783548.822808', 'execve', '"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]')
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)\)\s\=\s(\w+)");
>>> syspatern.search(syscall).groups()
('1522783548.822808', 'execve', '"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]', '0')
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)\)\s\=\s(.*)\<(\d+.\d+)\>");
>>> syspatern.search(syscall).groups()
('1522783548.822808', 'execve', '"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]', '0 ', '0.003235')
>>> syspatern.search(syscall).groups()[1]
'execve'
>>> syspatern.search(syscall).groups()[2]
'"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]'
>>> syspatern.search(syscall).groups()[3]
'0 '
>>> 
>>> syspatern.search(syscall).groups()[4]
'0.003235'
>>> syscall = '';
>>> 
>>> syscall = '1522783548.829601 open("/lib64/libfipscheck.so.1", O_RDONLY|O_CLOEXEC) = 3</usr/lib64/libfipscheck.so.1.2.1> <0.000023>';
>>> syspatern.search(syscall).groups()[4]
'0.000023'
>>> syspatern.search(syscall).groups()[3]
'3</usr/lib64/libfipscheck.so.1.2.1> '
>>> syspatern=re.compile("(\d+.\d+)\s(\w+)\((.*)\)\s\=\s(.*)\s\<(\d+.\d+)\>");
>>> syspatern.search(syscall).groups()[3]
'3</usr/lib64/libfipscheck.so.1.2.1>'
>>> syspatern.search(syscall).groups()[4]
'0.000023'
>>> syscall = '1522783548.822808 execve("/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]) = 0 <0.003235>';
>>> syspatern.search(syscall).groups()[4]
'0.003235'
>>> syspatern.search(syscall).groups()[3]
'0'
>>> syspatern.search(syscall).groups()[2]
'"/usr/sbin/sshd", ["/usr/sbin/sshd", "-f", "/etc/ssh/sshd_config_test"], [/* 34 vars */]'
>>> syspatern.search(syscall).groups()[1]
'execve'
>>> syspatern.search(syscall).groups()[0]
'1522783548.822808'
